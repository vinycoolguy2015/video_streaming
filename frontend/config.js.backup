// AWS Configuration - Auto-generated by deployment script
const AWS_CONFIG = {
    region: 'ap-southeast-1',

    // Cognito Configuration
    cognito: {
        userPoolId: 'ap-southeast-1_Yk24QUBfF',
        userPoolWebClientId: '4ssgjl4j2ncat3v1g6jmj391qo',
        identityPoolId: 'ap-southeast-1:0acffb65-450a-42df-8d63-01b69f8db8ee'
    },

    // API Gateway Configuration
    api: {
        baseUrl: 'https://ee9z2gf8g0.execute-api.ap-southeast-1.amazonaws.com/prod',
        endpoints: {
            stream: '/videos/stream',
            status: '/videos/status'
        }
    },

    // CloudFront Configuration
    cloudfront: {
        domain: 'd28ne9nfz6st6j.cloudfront.net'
    },

    // S3 Configuration
    s3: {
        contentBucket: 'videostreamingapp-video-content-808658323399'
    }
};

// Application Configuration
const APP_CONFIG = {
    // Subscription plans
    subscriptionPlans: {
        free: {
            name: 'Free',
            description: '10 seconds preview',
            features: ['Basic quality', '10-second previews', 'No ads'],
            maxDuration: 10,
            quality: '480p',
            price: 'Free'
        },
        standard: {
            name: 'Standard',
            description: 'Full videos in standard quality',
            features: ['Standard quality', 'Full content', 'No ads'],
            maxDuration: null,
            quality: '480p',
            price: '$4.99/month'
        },
        premium: {
            name: 'Premium',
            description: 'Full videos with HD quality options',
            features: ['HD quality options', 'Full content', 'No ads', 'Quality selection'],
            maxDuration: null,
            quality: ['720p', '1080p'],
            price: '$9.99/month'
        }
    },

    // Preview configuration for free users
    preview: {
        duration: 10   // 10 second previews for free users
    },

    // Video player settings
    player: {
        autoplay: false,
        controls: true,
        preload: 'metadata',
        playbackRates: [0.5, 0.75, 1, 1.25, 1.5, 2]
    },

    // Pagination settings
    pagination: {
        videosPerPage: 12,
        maxPaginationButtons: 5
    },

    // Videos are loaded dynamically from the backend
    // Thumbnails are automatically generated during video processing
};

// Upgrade prompts removed

// Utility functions
const CONFIG_UTILS = {
    // Validate if all required configuration is present
    validateConfig: function () {
        const required = [
            'AWS_CONFIG.cognito.userPoolId',
            'AWS_CONFIG.cognito.userPoolWebClientId',
            'AWS_CONFIG.cognito.identityPoolId',
            'AWS_CONFIG.api.baseUrl',
            'AWS_CONFIG.cloudfront.domain'
        ];

        const missing = [];

        required.forEach(path => {
            const value = this.getNestedValue(window, path);
            if (!value || value.includes('XXXXXXX')) {
                missing.push(path);
            }
        });

        if (missing.length > 0) {
            console.warn('Missing or incomplete configuration:', missing);
            return false;
        }

        return true;
    },

    // Get nested object value by string path
    getNestedValue: function (obj, path) {
        return path.split('.').reduce((current, key) => {
            return current && current[key] !== undefined ? current[key] : undefined;
        }, obj);
    },

    // Get full API endpoint URL
    getApiEndpoint: function (endpoint) {
        return AWS_CONFIG.api.baseUrl + AWS_CONFIG.api.endpoints[endpoint];
    },

    // Get CloudFront URL for video
    getVideoUrl: function (path) {
        return `https://${AWS_CONFIG.cloudfront.domain}/${path}`;
    },

    // Format duration for display
    formatDuration: function (seconds) {
        const hours = Math.floor(seconds / 3600);
        const minutes = Math.floor((seconds % 3600) / 60);
        const secs = Math.floor(seconds % 60);

        if (hours > 0) {
            return `${hours}:${minutes.toString().padStart(2, '0')}:${secs.toString().padStart(2, '0')}`;
        } else {
            return `${minutes}:${secs.toString().padStart(2, '0')}`;
        }
    }
};

// Make configurations available globally
window.AWS_CONFIG = AWS_CONFIG;
window.APP_CONFIG = APP_CONFIG;
window.CONFIG_UTILS = CONFIG_UTILS;

// Initialize AWS SDK
if (typeof AWS !== 'undefined') {
    AWS.config.update({
        region: AWS_CONFIG.region
    });
}

// Export for use in other modules
if (typeof module !== 'undefined' && module.exports) {
    module.exports = {
        AWS_CONFIG,
        APP_CONFIG,
        CONFIG_UTILS
    };
}
